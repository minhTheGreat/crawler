package jsoft.ads.assessment;

import java.sql.*;
import jsoft.objects.*;
import jsoft.ads.basic.*;
import jsoft.*;


public class AssessmentImpl extends BasicImpl  implements Assessment {
    public AssessmentImpl(ConnectionPool cp, String objectName) {
        super(cp, objectName);
    }

    /**
     * addAssessment
     *
     * @param item AssessmentObject
     * @return boolean
     * @todo Implement this jsoft.ads.assessment.Assessment method
     */
    public boolean addAssessment(AssessmentObject item) {

        //Kiem tra su ton tai
        if(this.isExisting(item)){
            return false;
        }
        String sql = "INSERT INTO tblassessment( ";

        sql += "assessment_name,  ";
        sql += "assessment_enable, ";
        sql += "assessment_type)";
        sql += "VALUES(?,?,?)";

        try{
        PreparedStatement pre = this.con.prepareStatement(sql);
        //Truyen gia tri
           pre.setString(1, item.getAssessment_name());
           pre.setBoolean(2, item.isAssessment_enable());
           pre.setByte(3, item.getAssessment_type());

           //Tra ve ket qua
           return this.add(pre);

       } catch (SQLException ex) {
           ex.printStackTrace();
       }



        return false;
    }

    //Khi them khi trung ten
    private boolean isExisting(AssessmentObject item) {
        boolean flag = false;

        String sql = "SELECT assessment_id FROM tblassessment ";
        sql += "WHERE assessment_name='" + item.getAssessment_name() + "' ";

        ResultSet rs = this.gets(sql);
        if (rs != null) {
            try {
                if (rs.next()) {
                    flag = true;
                }
                rs.close();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }

        return flag;
    }


    /**
     * delAssessment
     *
     * @param item AssessmentObject
     * @return boolean
     * @todo Implement this jsoft.ads.assessment.Assessment method
     */
    public boolean delAssessment(AssessmentObject item) {

        String sql  = "DELETE FROM tblassessment WHERE assessment_id=?";
        try {
            PreparedStatement pre = this.con.prepareStatement(sql);
            pre.setInt(1, item.getAsssessment_id());

            return this.del(pre);

        } catch (SQLException ex) {
            ex.printStackTrace();
        }


        return false;
    }

    /**
     * editAssessment
     *
     * @param item AssessmentObject
     * @return boolean
     * @todo Implement this jsoft.ads.assessment.Assessment method
     */
    public boolean editAssessment(AssessmentObject item) {

        String sql = "UPDATE tblassessment SET ";

        sql += "assessment_name=?,  ";
        sql += "assessment_enable=?, ";
        sql += "assessment_type=? ";

        sql += "WHERE assessment_id=?";

        try{
        PreparedStatement pre = this.con.prepareStatement(sql);
        //Truyen gia tri
           pre.setString(1, item.getAssessment_name());
           pre.setBoolean(2, item.isAssessment_enable());
           pre.setByte(3, item.getAssessment_type());

           pre.setInt(4, item.getAsssessment_id());


           //Tra ve ket qua
           return this.edit(pre);

       } catch (SQLException ex) {
           ex.printStackTrace();
       }

        return false;
    }

    /**
     * getAssessment
     *
     * @param id int
     * @return ResultSet
     * @todo Implement this jsoft.ads.assessment.Assessment method
     */
    public ResultSet getAssessment(int id) {
        String sql = "SELECT * FROM tblassessment WHERE assessment_id=?";
        return this.get(sql, id);
    }

    /**
     * getAssessments
     *
     * @param similar AssessmentObject
     * @param at int
     * @param total byte
     * @return ResultSet
     * @todo Implement this jsoft.ads.assessment.Assessment method
     */
    public ResultSet getAssessments(AssessmentObject similar, int at, byte total) {
        String sql = "SELECT * FROM tblassessment ";
        sql += "";
        sql += "";
        sql += "ORDER BY assessment_name ASC ";
        sql += "LIMIT "+at+", "+total;

        return this.gets(sql);

    }

    /**
     * getCP
     *
     * @return ConnectionPool
     * @todo Implement this jsoft.ShareControl method
     */
    public ConnectionPool getCP() {
        return null;
    }

    /**
     * releaseCon
     *
     * @todo Implement this jsoft.ShareControl method
     */
    public void releaseCon() {
    }
}
