package jsoft.ads.source;

import jsoft.*;
import jsoft.objects.*;
import java.util.*;
import java.sql.*;
import jsoft.ads.source.*;

/**
 * <p>Title: JP1707 Project</p>
 *
 * <p>Description: </p>
 *
 * <p>Copyright: Copyright (c) 2018</p>
 *
 * <p>Company: </p>
 *
 * @author TrungHieu
 * @version 1.0
 */
public class SourceModel {

    private Source s;

    public SourceModel(ConnectionPool cp) {
        this.s = new SourceImpl(cp, "Source");
    }

    protected void finallize() throws Throwable {
        this.s = null;
        super.finalize();
    }

    public ConnectionPool getCP() {
        return this.s.getCP();
    }

    public void releaseCon() {
        this.s.releaseCon();
    }


    //----------------------------------------------------

    public boolean addSource(SourceObject item) {
        return this.s.addSource(item);
    }

    public boolean editSource(SourceObject item) {
        return this.s.editSource(item);
    }

    public boolean delSource(SourceObject item) {
        return this.s.delSource(item);
    }

    public String enable(int id){
        String result = "fail";

        SourceObject item = new CategoryObject(); ;
        ResultSet rs = this.c.getCategory(id);

        if (rs != null) {
            try {
                if (rs.next()) {
                    item.setCategory_id(rs.getInt("category_id"));
                    item.setCategory_name(rs.getString("category_name"));
                    item.setCategory_enable(rs.getBoolean("category_enable"));
                    item.setCategory_source_id(rs.getInt("category_source_id"));
                    item.setCategory_link(rs.getString("category_link"));
                    item.setCategory_assessment_id(rs.getInt(
                            "category_assessment_id"));
                    item.setCategory_assessment_creator_id(rs.getInt(
                            "category_assessment_creator_id"));
                    item.setCategory_assessment_creator_name(rs.getString(
                            "category_assessment_creator_name"));
                    item.setCategory_created_at(rs.getString(
                            "category_created_at"));
                    item.setCategory_creator_id(rs.getInt("category_creator_id"));
                    item.setCategory_creator_name(rs.getString(
                            "category_creator_name"));
                    item.setCategory_last_updated_at(rs.getString(
                            "category_last_updated_at"));
                    item.setCategory_last_updator_name(rs.getString(
                            "category_last_updator_name"));
                    item.setCategory_last_updator_id(rs.getInt(
                            "category_last_updator_id"));
                    item.setSource_enable(rs.getBoolean("source_enable"));
                }

            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }


        return result;
    }

    //----------------------------------------------------

    public SourceObject getSourceObject(int id) {
        CategoryObject item = null;

        //Lay du lieu vao database,
        ResultSet rs = this.s.getSource(id);
        if (rs != null) {
            try {
                if (rs.next()) {
                    item = new CategoryObject();
                    item.setSource_id(rs.getInt("source_id"));
                    item.setSource_name(rs.getString("source_name"));
                    item.setSource_link(rs.getString("source_link"));
                    item.setSource_enable(rs.getBoolean("source_enable"));
                    item.setSource_html_selector(rs.getString("source_html_selector"));
                    item.setSource_created_at(rs.getString("source_created_at"));
                    item.setSource_creator_name(rs.getString( "source_creator_name"));
                    item.setSource_last_updated_at(rs.getString( "source_last_updated_at"));
                    item.setSource_last_updator_name(rs.getString( "source_last_updator_name"));
                    item.setSource_last_updator_id(rs.getInt( "source_last_updator_id"));

                }

            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }

        return item;
    }

    public SourceObject getSourceObject(String name) {
        SourceObject item = null;

        //Lay du lieu vao database,
        ResultSet rs = this.s.getSource(name);
        if (rs != null) {
            try {
                if (rs.next()) {
                    item = new CategoryObject();
                    item.setSource_id(rs.getInt("source_id"));
                    item.setSource_name(rs.getString("source_name"));
                    item.setSource_link(rs.getString("source_link"));
                    item.setSource_enable(rs.getBoolean("source_enable"));
                    item.setSource_html_selector(rs.getString("source_html_selector"));
                    item.setSource_created_at(rs.getString("source_created_at"));
                    item.setSource_creator_name(rs.getString( "source_creator_name"));
                    item.setSource_last_updated_at(rs.getString( "source_last_updated_at"));
                    item.setSource_last_updator_name(rs.getString( "source_last_updator_name"));
                    item.setSource_last_updator_id(rs.getInt( "source_last_updator_id"));
                }

            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }

        return item;
    }


  public ArrayList getSourceObjects(SourceObject similar, int page,
                                        int total) {

        ArrayList items = new ArrayList();
        SourceObject item = null;

        //Lay du lieu vao database,
        int at = (page - 1) * total;

        ResultSet rs = this.s.getSources(similar, at, total);
        if (rs != null) {
            try {
                while (rs.next()) {
                    item = new SourceObject();
                    item.setSource_id(rs.getInt("source_id"));
                    item.setSource_name(rs.getString("source_name"));
                    item.setSource_link(rs.getString("source_link"));
                    item.setSource_enable(rs.getBoolean("source_enable"));
                    item.setSource_html_selector(rs.getString("source_html_selector"));
                    item.setSource_created_at(rs.getString("source_created_at"));
                    item.setSource_creator_name(rs.getString( "source_creator_name"));
                    item.setSource_last_updated_at(rs.getString( "source_last_updated_at"));
                    item.setSource_last_updator_name(rs.getString( "source_last_updator_name"));
                    item.setSource_last_updator_id(rs.getInt( "source_last_updator_id"));
                    items.add(item);
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }

        return items;
    }

    public ArrayList getSourceObjects(){
        ArrayList items = new ArrayList();
        SourceObject item = null;

        //Lay du lieu vao database,

        ResultSet rs = this.s.getSources(null, 1, 999);
        if (rs != null) {
            try {
                while (rs.next()) {
                    item = new SourceObject();
                    item.setSource_id(rs.getInt("source_id"));
                    item.setSource_name(rs.getString("source_name"));
                    item.setSource_link(rs.getString("source_link"));
                    item.setSource_enable(rs.getBoolean("source_enable"));
                    item.setSource_html_selector(rs.getString("source_html_selector"));
                    item.setSource_created_at(rs.getString("source_created_at"));
                    item.setSource_creator_id(rs.getInt("source_creator_id"));
                    item.setSource_creator_name(rs.getString("source_creator_name"));
                    item.setSource_last_updator_id(rs.getInt("source_last_updator_id"));
                    item.setSource_last_updator_name(rs.getString("source_last_updator_name"));
                    item.setSource_last_updated_at(rs.getString("source_last_updated_at"));
                    items.add(item);
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
        return items;
    }

    //Chuan hoa chuoi ky tu
    private static char[] SPECIAL_CHARACTERS = { ' ', '!', '"', '#', '$', '%',
                        '*', '+', ',', ':', '<', '=', '>', '?', '@', '[', '\\', ']', '^',
                        '`', '|', '~', 'À', 'Á', 'Â', 'Ã', 'È', 'É', 'Ê', 'Ì', 'Í', 'Ò',
                        'Ó', 'Ô', 'Õ', 'Ù', 'Ú', 'Ý', 'à', 'á', 'â', 'ã', 'è', 'é', 'ê',
                        'ì', 'í', 'ò', 'ó', 'ô', 'õ', 'ù', 'ú', 'ý', '\u0102', '\u0103', '\u0110', '\u0111',
                        '\u0128', '\u0129', '\u0168', '\u0169', '\u01A0', '\u01A1', '\u01AF', '\u01B0', '\u1EA0', '\u1EA1', '\u1EA2', '\u1EA3', '\u1EA4',
                        '\u1EA5', '\u1EA6', '\u1EA7', '\u1EA8', '\u1EA9', '\u1EAA', '\u1EAB', '\u1EAC', '\u1EAD', '\u1EAE', '\u1EAF', '\u1EB0', '\u1EB1',
                        '\u1EB2', '\u1EB3', '\u1EB4', '\u1EB5', '\u1EB6', '\u1EB7', '\u1EB8', '\u1EB9', '\u1EBA', '\u1EBB', '\u1EBC', '\u1EBD', '\u1EBE',
                        '\u1EBF', '\u1EC0', '\u1EC1', '\u1EC2', '\u1EC3', '\u1EC4', '\u1EC5', '\u1EC6', '\u1EC7', '\u1EC8', '\u1EC9', '\u1ECA', '\u1ECB',
                        '\u1ECC', '\u1ECD', '\u1ECE', '\u1ECF', '\u1ED0', '\u1ED1', '\u1ED2', '\u1ED3', '\u1ED4', '\u1ED5', '\u1ED6', '\u1ED7', '\u1ED8',
                        '\u1ED9', '\u1EDA', '\u1EDB', '\u1EDC', '\u1EDD', '\u1EDE', '\u1EDF', '\u1EE0', '\u1EE1', '\u1EE2', '\u1EE3', '\u1EE4', '\u1EE5',
                        '\u1EE6', '\u1EE7', '\u1EE8', '\u1EE9', '\u1EEA', '\u1EEB', '\u1EEC', '\u1EED', '\u1EEE', '\u1EEF', '\u1EF0', '\u1EF1', };

      private static char[] REPLACEMENTS = { '-', '\0', '\0', '\0', '\0', '\0',
                      '\0', '_', '\0', '_', '\0', '\0', '\0', '\0', '\0', '\0', '_',
                      '\0', '\0', '\0', '\0', '\0', 'A', 'A', 'A', 'A', 'E', 'E', 'E',
                      'I', 'I', 'O', 'O', 'O', 'O', 'U', 'U', 'Y', 'a', 'a', 'a', 'a',
                      'e', 'e', 'e', 'i', 'i', 'o', 'o', 'o', 'o', 'u', 'u', 'y', 'A',
                      'a', 'D', 'd', 'I', 'i', 'U', 'u', 'O', 'o', 'U', 'u', 'A', 'a',
                      'A', 'a', 'A', 'a', 'A', 'a', 'A', 'a', 'A', 'a', 'A', 'a', 'A',
                      'a', 'A', 'a', 'A', 'a', 'A', 'a', 'A', 'a', 'E', 'e', 'E', 'e',
                      'E', 'e', 'E', 'e', 'E', 'e', 'E', 'e', 'E', 'e', 'E', 'e', 'I',
                      'i', 'I', 'i', 'O', 'o', 'O', 'o', 'O', 'o', 'O', 'o', 'O', 'o',
                      'O', 'o', 'O', 'o', 'O', 'o', 'O', 'o', 'O', 'o', 'O', 'o', 'O',
                      'o', 'U', 'u', 'U', 'u', 'U', 'u', 'U', 'u', 'U', 'u', 'U', 'u',
                      'U', 'u', };

      public static String toUrlFriendly(String s) {
              int maxLength = Math.min(s.length(), 236);
              char[] buffer = new char[maxLength];
              int n = 0;
              for (int i = 0; i < maxLength; i++) {
                      char ch = s.charAt(i);
                      buffer[n] = removeAccent(ch);
                      // skip not printable characters
                      if (buffer[n] > 31) {
                              n++;
                      }
              }
              // skip trailing slashes
              while (n > 0 && buffer[n - 1] == '/') {
                      n--;
              }
              return String.valueOf(buffer, 0, n);
      }

      public static char removeAccent(char ch) {
              int index = Arrays.binarySearch(SPECIAL_CHARACTERS, ch);
              if (index >= 0) {
                      ch = REPLACEMENTS[index];
              }
              return ch;
      }

      public static String removeAccent(String s) {
              StringBuilder sb = new StringBuilder(s);
              for (int i = 0; i < sb.length(); i++) {
                      sb.setCharAt(i, removeAccent(sb.charAt(i)));
              }
              return sb.toString();
      }
}
